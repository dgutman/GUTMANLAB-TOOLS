#!/usr/bin/perl
## This script was written on 5/19/2011 by D Gutman and Alexandra Anghelescu
# It scans a directory that should contain masks generated by VELOCITY
# and transcodes them into a NIFTI file format so that can be incorporated into our processing pipeline


#$MASK_EXPORT_DIRECTORY = "/IMAGING_SCRATCH/TCGA_DICOM_CACHE/TCGA_DATA/MASK_EXPORT/SCRIPT_OUTPUT/";
$MASK_EXPORT_DIRECTORY = "/IMAGING_SCRATCH/TCGA_DICOM_CACHE/TCGA_DATA/MASK_EXPORT/TEMP_OUTPUT_BEFORE_RENAMING/";


$MASK_EXPORT_DIRECTORY = "/IMAGING_SCRATCH/TCGA_DICOM_CACHE/DG_MASK_REORGANIZATION/";

$MASK_TYPES[0] = "AXIAL_T1_POST_GD";
$MASK_TYPES[1] = "AXIAL_T2_FLAIR";


# This contains the Dicom RT objects... and should also contain the directory that was created using the 
# MakeMask.exe program... which is actually a windows utility that transcodes a DicomRT file (and it's accompaying DICOM SERIES
# which the mask was drawn on) into a DCM mask file....



$NIFTI_MASK_EXPORT_DIRECTORY = "/IMAGING_SCRATCH/TCGA_DICOM_CACHE/TCGA_DATA/NIFTI_FILES/NIFTI_MASKS/MRICONVERTED_NIFTI_MASK_FILES/";


$NIFTI_MASK_EXPORT_DIRECTORY  = "/IMAGING_SCRATCH/TCGA_DICOM_CACHE/DG_MASK_REORGANIZATION/";
### Now I will iterate through all of the Directories containg DICOM MASKS
## MASK_PATTERN =  "DJ_POST_MASK, ARGO_POST_MASK, TYLER_POST_MASK ";

for($x=0;$x<=$#MASK_TYPES;$x++)
	{
$cur_working_dir = $MASK_EXPORT_DIRECTORY . $MASK_TYPES[$x] ;

print "$cur_working_dir\n"; 

@DIRS_TO_PROCESS = glob("${cur_working_dir}/*/*");

for($i=0;$i<=$#DIRS_TO_PROCESS;$i++)
	{
### will create a functino to grab the patient ID..
## realistically I want to check for patterisn
## I only want to run this script on directories... not files.. since a directory is what gets passed to 

if(-d $DIRS_TO_PROCESS[$i]) {
if( $DIRS_TO_PROCESS[$i] =~ m/DJ_POST_MASK|ARGO_POST_MASK|Tumor_TA_E|Tyler|FLAIR/ ) {
 print "Valid pattern found\n"; 

#if( $DIRS_TO_PROCESS[$i] =~ m/ARGO_POST_MASK/ ) { print "Valid pattern found\n"; 

$current_patient_id = 	 get_patient_id($DIRS_TO_PROCESS[$i]);

## I will place the nifti outputted files in 
### only want to run this loop if I actually hava valid patient ID...
if( $current_patient_id)  
	{

print $DIRS_TO_PROCESS[$i] . "\n";

$NIFTI_OUTPUT_TARGET = $NIFTI_MASK_EXPORT_DIRECTORY . $MASK_TYPES[$x] . "/". $PATIENT_ID;

print $NIFTI_OUTPUT_TARGET . "\n";
### 

if( ! -d $NIFTI_OUTPUT_TARGET) { `mkdir -p $NIFTI_OUTPUT_TARGET`; }
$NIFTI_CONVERSION_COMMAND = "/usr/bin/mcverter -o $NIFTI_OUTPUT_TARGET -d -v -n -f fsl $DIRS_TO_PROCESS[$i]";

print "$NIFTI_CONVERSION_COMMAND \n";
@CONVERSION_OUTPUT = `$NIFTI_CONVERSION_COMMAND`;

$CONVERTED_A_FILE = 0;
for($m=0;$m<=$#CONVERSION_OUTPUT;$m++)
	{
#	print "$i;$CONVERSION_OUTPUT[$m]";

if ($CONVERSION_OUTPUT[$m] =~ m/Wrote \/IMAGING_SCRATCH/) { print "Wrote a file.. which is good\n"; }
###

	}

## mcverter is a command line tool that will convert a DICOM directory to nifti files...
#$BUILD_NIFTI_COMMAND = "/home/dgutman/usr/binmcverter -o $NIFTI_OUTPUT_FILE -d -n -f nifti $OUTPUT_DICOM_FILE_DIR";
###dg_update_scan_id_and_make_nifti.pl:###$ /home/dgutman/usr/bin/mcverter -o TCGA-06-0130/NIFTI_TEST -d -v -n -f nifti CRAP0/*.dcm

	}

}


 else {		
			 print "not a valid directory type for $DIRS_TO_PROCESS[$i] \n";

		}

		}

	}
}

sub get_patient_id( $FULL_PATH_NAME )
	{

$CURRENT_PATH = $_[0];

#print "Received $CURRENT_PATH \n";

### going to look for patient ID's.... which should be HF1234 of TCGA-12-1234

$PATIENT_ID = "";

if($CURRENT_PATH =~ m/TCGA-(\d\d)-(\d\d\d\d)/)  { 
		#print "Patient id is TCGA-$1-$2\n"; 	
		$PATIENT_ID = "TCGA-$1-$2";		
		}
elsif($CURRENT_PATH =~ m/HF(\d\d\d\d)/)  { 
		#	print "Patient id is HF-$1\n"; 
			$PATIENT_ID = "HF$1";		
		}
else { print "Ruh ROH--- didn't find a patient ID\n"; exit;}	


return($PATIENT_ID);

	}

